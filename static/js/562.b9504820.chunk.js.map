{"version":3,"file":"static/js/562.b9504820.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/Contacts/ContactsFilter/ContactsFilter.jsx","../node_modules/nanoid/index.browser.js","components/Contacts/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsList/ContactsItem/ContactsItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","../node_modules/@mui/material/esm/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/esm/CircularProgress/CircularProgress.js","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getIsLoading = ({ contacts }) => contacts.isLoading;\n\nexport const getError = ({ contacts }) => contacts.error;\n","export const getFilterContacts = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilterContacts } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { Box, OutlinedInput, Typography } from '@mui/material';\n\nexport const ContactsFilter = () => {\n  const filterContacts = useSelector(getFilterContacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { value } = e.target;\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        m: '40px auto 0',\n        maxWidth: '35%',\n        backgroundColor: '#f1f1f147',\n        padding: '15px 20px',\n        borderRadius: '4px',\n      }}\n    >\n      <Typography\n        variant=\"subtitle1\"\n        component=\"p\"\n        sx={{\n          fontWeight: 600,\n          mr: 2,\n          textAlign: 'left',\n          lineHeight: 1.2,\n          width: '50%',\n        }}\n      >\n        Find contacts by name\n      </Typography>\n\n      <OutlinedInput\n        type=\"text\"\n        name=\"filter\"\n        value={filterContacts}\n        onChange={onChange}\n        size=\"small\"\n      />\n    </Box>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toastSuccess, toastWarn } from 'services/toast';\nimport { TextField, Box, Button } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const onChangeForm = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const searchDuplicate = name => {\n    return contacts.find(item => item.name === name);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (searchDuplicate(name)) {\n      return toastWarn(name);\n    }\n\n    dispatch(addContact({ name, number }));\n    toastSuccess(name);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={onSubmitForm}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          m: '40px auto',\n          maxWidth: '35%',\n          backgroundColor: '#f1f1f147',\n          padding: '25px 30px',\n          borderRadius: '4px',\n        }}\n      >\n        <TextField\n          htmlFor={nameId}\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          sx={{\n            mb: 2,\n          }}\n        />\n\n        <TextField\n          htmlFor={numberId}\n          label=\"Number\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={onChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          sx={{\n            mb: 2,\n          }}\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Box>\n    </form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { toastInfo } from 'services/toast';\nimport { Box, Button } from '@mui/material';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactsItem = ({ items }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveContacts = (id, name) => {\n    dispatch(deleteContact(id));\n    toastInfo(name);\n  };\n\n  return (\n    <>\n      {items.map(({ id, name, number }) => {\n        return (\n          <Box\n            key={id}\n            component=\"li\"\n            sx={{\n              borderRadius: '4px',\n              boxShadow: ' 0 1px 4px rgb(0 0 0 / 10%)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              padding: '15px 20px',\n              mt: 2,\n            }}\n          >\n            {name}: {number}\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={() => onRemoveContacts(id, name)}\n            >\n              Delete\n            </Button>\n          </Box>\n        );\n      })}\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\n\nimport {\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilterContacts } from 'redux/filter/filter-selectors';\nimport { ContactsItem } from 'components/Contacts/ContactsList/ContactsItem';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const getVisibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading && <p>...loading</p>}\n      {getVisibleContacts.length > 0 && !isLoading && !error && (\n        <>\n          <Box\n            component=\"ul\"\n            sx={{\n              m: '20px auto 40px',\n              maxWidth: '38%',\n              display: 'flex',\n              flexDirection: 'column',\n              listStyle: 'none',\n            }}\n          >\n            <ContactsItem items={getVisibleContacts} />\n          </Box>\n        </>\n      )}\n      {getVisibleContacts.length === 0 && !error && !isLoading && (\n        <p>Not found &#x1f60c;</p>\n      )}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { ContactsFilter } from 'components/Contacts/ContactsFilter';\nimport { ContactsForm } from 'components/Contacts/ContactsForm';\nimport { ContactsList } from 'components/Contacts/ContactsList';\n\nimport { Typography, CircularProgress } from '@mui/material';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactsForm />\n      <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\n        Contacts\n      </Typography>\n\n      {contacts.length > 0 && !error && !loading && (\n        <>\n          <ContactsFilter />\n          <ContactsList />\n        </>\n      )}\n      {loading && <CircularProgress sx={{ mt: 4 }} />}\n      {contacts.length === 0 && !loading && (\n        <p>There are no contacts &#x1f609;</p>\n      )}\n      {error && <p>Oops, something went wrong</p>}\n    </>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/Contacts/Contacts';\nimport { Typography } from '@mui/material';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 'bold' }}>\n        Phonebook\n      </Typography>\n      <Contacts />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","contacts","items","getIsLoading","isLoading","getError","error","getFilterContacts","filter","ContactsFilter","filterContacts","useSelector","dispatch","useDispatch","Box","sx","display","alignItems","m","maxWidth","backgroundColor","padding","borderRadius","Typography","variant","component","fontWeight","mr","textAlign","lineHeight","width","OutlinedInput","type","name","value","onChange","e","target","setFilter","size","nanoid","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactsForm","useState","setName","number","setNumber","nameId","numberId","onChangeForm","autoComplete","onSubmit","preventDefault","find","item","searchDuplicate","toastWarn","addContact","toastSuccess","flexDirection","TextField","htmlFor","label","pattern","title","required","mb","Button","ContactsItem","map","boxShadow","justifyContent","mt","onClick","deleteContact","toastInfo","onRemoveContacts","ContactsList","getVisibleContacts","toLowerCase","includes","length","listStyle","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","color","theme","_extends","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","className","style","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","loading","useEffect","fetchContacts"],"sourceRoot":""}